{"projects" : [
  {
    "name": "Libgen Project",
    "images": [
      "./projects/libgenss.webp",
      "./projects/libgenss2.webp",
      "./projects/libgenss3.webp"
    ],
    "smallImages": [
      "./projects/libgenss-small.webp",
      "./projects/libgenss2-small.webp",
      "./projects/libgenss3-small.webp"
    ],
    "icons" : [
      "NodeJs",
      "JavaScript",
      "React",
      "Express",
      "TailwindCSS"
    ],
    "url": "https://ddaudalagid5012.netlify.app/",
    "gitHub": "https://github.com/501ego/libgen",
    "Description":
     "Web application that combines the LibGen and Google Books APIs to provide a book search service. Users can search for books by title, author, or category and get a list of results that include detailed book information, a preview, and the possibility to obtain a link to download the book via LibGen."
  },
  {
    "name": "Recipe generator",
    "images": [
      "./projects/recipess.webp",
      "./projects/recipess2.webp",
      "./projects/recipess3.webp"
    ],
    "smallImages": [
      "./projects/recipess-small.webp",
      "./projects/recipess2-small.webp",
      "./projects/recipess3-small.webp"
    ],
    "icons" : [
      "JavaScript",
      "React",
      "NextJs",
      "TailwindCSS",
      "MongoDB"
    ],
    "url": "https://recipes-generator-ten.vercel.app/",
    "gitHub": "https://github.com/501ego/recipes-generator",
    "Description":
      "Project designed to create vegan recipes. It was crafted using React, Next.js, and TailwindCSS, resulting in a streamlined and visually appealing interface. The application is integrated with a MongoDB database, allowing for real-time updates to add or delete from your own recipe collection."
  },
  {
    "name": "Point of Sale",
    "images": [
      "./projects/posss.webp",
      "./projects/posss2.webp",
      "./projects/posss3.webp"
    ],
    "smallImages": [
      "./projects/posss-small.webp",
      "./projects/posss2-small.webp",
      "./projects/posss3-small.webp"
    ],
    "icons" : [
      "Python",
      "Django",
      "PostgreSQL",
      "TailwindCSS"
    ],
    "url": null,
    "gitHub": "https://github.com/501ego/proyecto/tree/main",
    "Description":
      "University project. It has been developed using Python and the Django framework, integrated with a solid SQL database structure in PostgreSQL. The application encompasses all the essential functions that a point of sale requires, including inventory and employee management, sales reports, employee profiles, and the ability to print receipts for every transaction or refund."
  }]

}